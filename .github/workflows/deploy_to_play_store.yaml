name: Deploy to Closed Test

on:
  push:
    branches:
      - play-store

jobs:
  store_deploy_android:
    name: Android Store Release
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: 17
      FLUTTER_VERSION: 3.22.2
      AAB_PATH: android/app/build/outputs/bundle/release/app-release.aab
      KEYSTORE_PATH: android/upload-keystore.jks
      KEY_PROPS_PATH: android/key.properties
      SERVICE_ACCOUNT_PATH: android/store_credentials.json
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      FLUTTER_ROOT: /opt/hostedtoolcache/flutter/stable-3.22.2-x64
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Setup Java to compile the Android project
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Create local.properties
        run: |
          echo "sdk.dir=${{ env.ANDROID_SDK_ROOT }}" > android/local.properties
          echo "flutter.sdk=${{ env.FLUTTER_ROOT }}" >> android/local.properties
          echo "flutter.buildMode=debug" >> android/local.properties
          echo "flutter.versionName=1.0.0" >> android/local.properties
          echo "flutter.versionCode=7" >> android/local.properties
          echo "flutter.minSdkVersion=21" >> android/local.properties
          echo "flutter.targetSdkVersion=30" >> android/local.properties
          echo "compileSdkVersion=34" >> android/local.properties
          echo "ndkVersion=26.1.10909125" >> android/local.properties

      - name: Decode Android keystore
        run: echo "${{ secrets.KEY_STORE_FILE }}" | base64 --decode > ${{ env.KEYSTORE_PATH }}

      - name: Decode Android key properties
        run: echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > ${{ env.KEY_PROPS_PATH }}

      - name: Decode Android Service Account
        run: echo "${{ secrets.GOOGLE_PLAY_JSON_KEY }}" | base64 --decode > ${{ env.SERVICE_ACCOUNT_PATH }}

      - name: Run flutter pub get
        run: flutter pub get

      # - name: Analyze to check for bad Dart/Flutter practices
      #   run: flutter analyze

      # - name: Run all app tests
      #   run: flutter test

      - name: Build aab
        run: flutter build appbundle --release

      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.KEY_STORE_FILE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Tag Release
        run: |
          version_name=$(date +'%Y%m%d%H%M%S')
          echo "Tagging release with tag $version_name"
          git tag $version_name
          git push origin --tags

      - name: Upload generated aab to the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aab-stores
          path: ${{ env.AAB_PATH }}

      - name: Deploy to Closed Test
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ env.SERVICE_ACCOUNT_PATH }}
          packageName: ${{ secrets.PACKAGE_NAME }}
          releaseFile: ${{ env.AAB_PATH }}
          track: closed
          status: inProgress
          inAppUpdatePriority: 3
          whatsNewDirectory: update-news
