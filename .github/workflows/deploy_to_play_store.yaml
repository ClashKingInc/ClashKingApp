name: Deploy to Closed Test

on:
  push:
    branches:
      - play-store

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'

      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > android/local.properties
          echo "flutter.sdk=$FLUTTER_ROOT" >> android/local.properties
          echo "flutter.buildMode=debug" >> android/local.properties
          echo "flutter.versionName=1.0.0" >> android/local.properties
          echo "flutter.versionCode=7" >> android/local.properties
          echo "flutter.minSdkVersion=21" >> android/local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Print local.properties
        run: cat android/local.properties

      - name: Echo FLUTTER_ROOT
        run: echo $FLUTTER_ROOT

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build with Gradle
        working-directory: android
        run: ./gradlew build
        env:
          FLUTTER_ROOT: $FLUTTER_ROOT

      - name: Assemble Release Bundle
        working-directory: android
        run: ./gradlew bundleRelease
        env:
          FLUTTER_ROOT: $FLUTTER_ROOT

      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.KEY_STORE_FILE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Tag Release
        run: |
          version_name=$(date +'%Y%m%d%H%M%S')
          echo "Tagging release with tag $version_name"
          git tag $version_name
          git push origin --tags

      - name: Create service_account.json
        run: echo '${{ secrets.GOOGLE_PLAY_JSON_KEY }}' > service_account.json

      - name: Deploy to Closed Test
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: ${{ secrets.PACKAGE_NAME }}
          releaseFile: android/app/build/outputs/bundle/release/app-release.aab
          track: closed
          status: inProgress
          inAppUpdatePriority: 3
          whatsNewDirectory: update-news
