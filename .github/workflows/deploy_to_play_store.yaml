name: Deploy to Opened Test

on:
  push:
    tags:
      - 'v*'

jobs:
  store_deploy_android:
    name: Android Store Release
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: 21
      FLUTTER_VERSION: 3.22.2
      AAB_PATH: build/app/outputs/bundle/release/app-release.aab
      KEYSTORE_PATH: android/ck_key.jks
      KEY_PROPS_PATH: android/key.properties
      SERVICE_ACCOUNT_PATH: android/app/store_credentials.json
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      FLUTTER_ROOT: /opt/hostedtoolcache/flutter/stable-3.22.2-x64
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Extract version from tag and generate build number
        id: extract_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}          # Extrait "v1.0.0"
          VERSION_NAME=${TAG#v}                # Retire "v" pour obtenir "1.0.0"
          BUILD_NUMBER=$(date +%s)             # Génère un numéro de build basé sur le timestamp
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          
      - name: Update version in pubspec.yaml
        run: |
          sed -i "s/^version: .*/version: ${{ env.VERSION_NAME }}+${{ env.BUILD_NUMBER }}/" pubspec.yaml
          echo "Updated pubspec.yaml with version ${{ env.VERSION_NAME }}+${{ env.BUILD_NUMBER }}"
      
      - name: Verify updated pubspec.yaml
        run: cat pubspec.yaml

      - name: Setup Java to compile the Android project
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Create local.properties
        run: |
          echo "sdk.dir=${{ env.ANDROID_SDK_ROOT }}" > android/local.properties
          echo "flutter.sdk=${{ env.FLUTTER_ROOT }}" >> android/local.properties
          echo "flutter.buildMode=release" >> android/local.properties
          echo "flutter.versionName=${{ env.VERSION_NAME }}" >> android/local.properties
          echo "flutter.versionCode=${{ env.BUILD_NUMBER }}" >> android/local.properties
          echo "flutter.minSdkVersion=21" >> android/local.properties
          echo "flutter.targetSdkVersion=34" >> android/local.properties
          echo "compileSdkVersion=34" >> android/local.properties
          echo "ndkVersion=26.1.10909125" >> android/local.properties

      - name: Decode and create Android keystore
        run: echo "${{ secrets.KEY_STORE_FILE }}" | base64 --decode > ${{ env.KEYSTORE_PATH }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ github.workspace }}/${{ env.KEYSTORE_PATH }}" > ${{ env.KEY_PROPS_PATH }}
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> ${{ env.KEY_PROPS_PATH }}
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> ${{ env.KEY_PROPS_PATH }}
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> ${{ env.KEY_PROPS_PATH }}

      - name: Decode Android Service Account
        run: echo "${{ secrets.GOOGLE_PLAY_JSON_KEY }}" | base64 --decode > ${{ env.SERVICE_ACCOUNT_PATH }}

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Run flutter pub get
        run: flutter pub get

      # - name: Analyze to check for bad Dart/Flutter practices
      #   run: flutter analyze

      # - name: Run all app tests
      #   run: flutter test

      - name: Build aab & Sign the release
        run: flutter build appbundle --release

      - name: List output files for debugging
        run: ls -R build/app/outputs/bundle/release/

      - name: Upload generated aab to the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aab-stores
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Deploy to Opened Test
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ env.SERVICE_ACCOUNT_PATH }}
          packageName: ${{ secrets.PACKAGE_NAME }}
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: beta
          status: completed
          inAppUpdatePriority: 4
          whatsNewDirectory: update-news
